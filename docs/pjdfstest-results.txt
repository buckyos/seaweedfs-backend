Go implementation:

/opt/pjdfstest/tests/open/00.t (Wstat: 0 Tests: 47 Failed: 2)
  Failed tests:  33-34
/opt/pjdfstest/tests/open/02.t (Wstat: 0 Tests: 4 Failed: 3)
  Failed tests:  1-3
/opt/pjdfstest/tests/open/03.t (Wstat: 0 Tests: 4 Failed: 3)
  Failed tests:  1-3



rust implementation:

open
/opt/pjdfstest/tests/open/00.t (Wstat: 0 Tests: 47 Failed: 2)
  Failed tests:  33-34


mknod
/opt/pjdfstest/tests/mknod/00.t (Wstat: 0 Tests: 36 Failed: 2)
  Failed tests:  33-34
/opt/pjdfstest/tests/mknod/11.t (Wstat: 0 Tests: 28 Failed: 4)
  Failed tests:  12-13, 25-26


unlink
/opt/pjdfstest/tests/unlink/00.t ........... 
29, 34, 39, 44, 49,
所有失败的测试都与时间戳（timestamp）检查有关
测试期望：创建硬链接后，原文件的 ctime（change time）应该更新


74-75, 80-81, 86-87, 92-93, 98-99, 104-105, 110
这些测试都是在测试"失败的链接操作不应该更新时间戳"


/opt/pjdfstest/tests/unlink/14.t ........... 
  not ok 4 - tried 'open pjdfstest_eb776d2288a49ca9a14ed144f61ae430 O_RDONLY : unlink pjdfstest_eb776d2288a49ca9a14ed144f61ae430 : fstat 0 nlink', expected 0, got ENOENT
测试步骤：
open ${n0} O_RDONLY：以只读方式打开文件
unlink ${n0}：删除文件
fstat 0 nlink：尝试获取文件的硬链接数
错误信息：
期望返回值：0（表示操作成功）
实际返回值：ENOENT（No such file or directory）
说明系统认为文件已经不存在了

Link

/opt/pjdfstest/tests/link/00.t (Wstat: 0 Tests: 202 Failed: 10)
  Failed tests:  135-136, 142-143, 149-150, 156-157, 163-164
它们都在测试"失败的链接操作不应更新时间戳"
每对失败的测试（如135-136）对应一种文件类型（regular/fifo/block/char/socket）


mkdir
/opt/pjdfstest/tests/mkdir/00.t (Wstat: 0 Tests: 36 Failed: 2)
  Failed tests:  33-34


rename
/opt/pjdfstest/tests/rename/23.t (Wstat: 0 Tests: 42 Failed: 5)
  Failed tests:  7, 15, 23, 31, 39

每个失败的测试都是在检查 ctime（change time）的更新
测试场景：
创建源文件和目标文件
为目标文件创建硬链接
重命名源文件到目标文件
检查硬链接的 ctime 是否更新
失败原因：
时间戳更新问题：
测试期望：重命名操作应该更新硬链接的 ctime
实际：ctime 没有按预期更新


/opt/pjdfstest/tests/rename/24.t (Wstat: 0 Tests: 13 Failed: 4)
  Failed tests:  4-5, 8-9
  目录链接数计算规则：
每个目录默认有 2 个链接（. 和 ..）
每个子目录会给父目录增加 1 个链接数
期望的链接数：
src_parent 初始应有 3 个链接（2 + 1个子目录）
dst_parent 初始应有 2 个链接（默认的 . 和 ..）
重命名后，src_parent 应变为 2，dst_parent 应变为 3
实际情况：
所有目录的链接数都显示为 1
说明文件系统没有正确实现目录的硬链接计数